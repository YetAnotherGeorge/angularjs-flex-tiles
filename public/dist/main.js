/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/dom_utils.ts":
/*!**************************!*\
  !*** ./src/dom_utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GetDomRectComputed = exports.animationFlash = exports.downloadBinaryFromBase64 = exports.downloadJson = exports.getElementByIdOrThrow = exports.RemoveStylesFromCssString = exports.SetStylesFromCssString = void 0;\n/**\n * Applies CSS string to via element.style\n * @param elem\n * @param styleString\n */\nfunction SetStylesFromCssString(elem, styleString) {\n    let sa = styleString.split(\";\")\n        .map((token) => token.trim())\n        .filter((token) => token.length > 0 && (token.match(/:/g) || []).length == 1)\n        .map((token) => token.split(\":\").map(tt => tt.trim()));\n    // background-color => backgroundColor\n    for (let i = 0; i < sa.length; i++) {\n        sa[i][0] = sa[i][0].replace(/-[a-z]{1}/g, function (match) { return match.slice(1).toUpperCase(); });\n    }\n    for (let i = 0; i < sa.length; i++) {\n        elem.style[sa[i][0]] = sa[i][1];\n    }\n}\nexports.SetStylesFromCssString = SetStylesFromCssString;\n/**\n* Replaces CSS keys in string with \"\"\n* @param elem\n* @param styleString\n*/\nfunction RemoveStylesFromCssString(elem, styleString) {\n    let sa = styleString.split(\";\")\n        .map((token) => token.trim())\n        .filter((token) => token.length > 0 && (token.match(/:/g) || []).length == 1)\n        .map((token) => {\n        return [token.split(\":\")[0].trim(), \"\"];\n    });\n    // background-color => backgroundColor\n    for (let i = 0; i < sa.length; i++) {\n        sa[i][0] = sa[i][0].replace(/-[a-z]{1}/g, function (match) { return match.slice(1).toUpperCase(); });\n    }\n    for (let i = 0; i < sa.length; i++) {\n        elem.style[sa[i][0]] = sa[i][1];\n    }\n}\nexports.RemoveStylesFromCssString = RemoveStylesFromCssString;\nfunction getElementByIdOrThrow(idStr) {\n    let elem = document.getElementById(idStr);\n    if (elem == null)\n        throw new Error(`Element with id ${idStr} not found`);\n    return elem;\n}\nexports.getElementByIdOrThrow = getElementByIdOrThrow;\nfunction downloadJson(data, fileName) {\n    let down = \"data:text;json;charset=utf-8,\" + encodeURIComponent(data);\n    let downloadAnchor = document.createElement(\"a\");\n    downloadAnchor.style.display = \"none\";\n    downloadAnchor.setAttribute(\"href\", down);\n    downloadAnchor.setAttribute(\"download\", fileName);\n    downloadAnchor.click();\n}\nexports.downloadJson = downloadJson;\nfunction downloadBinaryFromBase64(b64Str, fileName) {\n    let down = \"data:application/octet-steam;base64,\" + b64Str;\n    let downloadAnchor = document.createElement(\"a\");\n    downloadAnchor.setAttribute(\"href\", down);\n    downloadAnchor.setAttribute(\"download\", fileName);\n    downloadAnchor.click();\n}\nexports.downloadBinaryFromBase64 = downloadBinaryFromBase64;\nfunction animationFlash(elem) {\n    elem.classList.add(\"flashing\");\n    setTimeout(() => { elem.classList.remove(\"flashing\"); }, 150);\n}\nexports.animationFlash = animationFlash;\nfunction GetDomRectComputed(elem) {\n    let d = elem.getBoundingClientRect();\n    let computedHeight = parseFloat(window.getComputedStyle(elem, null).getPropertyValue(\"height\"));\n    if (isNaN(computedHeight))\n        throw new Error(`Computed height is NaN for element ${elem}`);\n    let computedWidth = parseFloat(window.getComputedStyle(elem, null).getPropertyValue(\"width\"));\n    if (isNaN(computedWidth))\n        throw new Error(`Computed width is NaN for element ${elem}`);\n    let dc = {\n        bottom: d.bottom,\n        height: d.height,\n        left: d.left,\n        right: d.right,\n        top: d.top,\n        width: d.width,\n        x: d.x,\n        y: d.y,\n        computedHeight: computedHeight,\n        computedWidth: computedWidth\n    };\n    return dc;\n}\nexports.GetDomRectComputed = GetDomRectComputed;\n\n\n//# sourceURL=webpack://frontend-webpack/./src/dom_utils.ts?");

/***/ }),

/***/ "./src/get_recreated.ts":
/*!******************************!*\
  !*** ./src/get_recreated.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.get = exports.AJAX_POST = exports.AJAX_GET = void 0;\nfunction AJAX_GET(url) {\n    let promise = new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.onload = function () {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                let res = {\n                    status: xhr.status, responseText: xhr.responseText\n                };\n                resolve(res);\n            }\n            else {\n                let res = {\n                    status: xhr.status, responseText: xhr.responseText\n                };\n                reject(res);\n            }\n        };\n        xhr.onerror = function () {\n            reject({ status: xhr.status, responseText: xhr.responseText });\n        };\n        xhr.send();\n    });\n    return promise;\n}\nexports.AJAX_GET = AJAX_GET;\nfunction AJAX_POST(url, body = null) {\n    const promise = new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', url, true);\n        xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n        xhr.onload = function () {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                const res = {\n                    status: xhr.status,\n                    responseText: xhr.responseText,\n                };\n                resolve(res);\n            }\n            else {\n                const res = {\n                    status: xhr.status,\n                    responseText: xhr.responseText,\n                };\n                reject(res);\n            }\n        };\n        xhr.onerror = function () {\n            reject({ status: xhr.status, responseText: xhr.responseText });\n        };\n        xhr.send(body);\n    });\n    return promise;\n}\nexports.AJAX_POST = AJAX_POST;\n/**\n * Does not automatically call apply; for this to work, the server's api user login + permissions monitoring must be overridden\n * @param urlencoded\n * @param cb data is found in obj.data\n * @param cberr\n * @param $http\n */\nfunction get(urlencoded, cb, cberr) {\n    AJAX_GET(urlencoded).then((value) => {\n        let respObj = null;\n        let respObjParsed = false;\n        try {\n            respObj = JSON.parse(value.responseText);\n            respObjParsed = true;\n        }\n        catch (ex) {\n            cberr(ex);\n        }\n        if (respObjParsed)\n            cb(respObj);\n    }).catch(cberr);\n}\nexports.get = get;\n//#endregion\n\n\n//# sourceURL=webpack://frontend-webpack/./src/get_recreated.ts?");

/***/ }),

/***/ "./src/get_typed.ts":
/*!**************************!*\
  !*** ./src/get_typed.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.typedDBGet = void 0;\nconst get_recreated_1 = __webpack_require__(/*! ./get_recreated */ \"./src/get_recreated.ts\");\nconst misc_util_1 = __webpack_require__(/*! ./misc_util */ \"./src/misc_util.ts\");\nasync function typedDBGet(urlencoded, converter) {\n    let roTaskCompletionSource = new misc_util_1.TaskCompletionSource(); // Result Obtained Task Completion Source\n    get_recreated_1.get(urlencoded, (obj) => {\n        if (Array.isArray(obj.data)) {\n            let daRaw = obj.data;\n            let da = [];\n            for (let i = 0; i < daRaw.length; i++) {\n                let v = converter(daRaw[i], roTaskCompletionSource.reject);\n                if (roTaskCompletionSource.rejectSet)\n                    return;\n                da.push(v);\n            }\n            roTaskCompletionSource.resolve(da);\n        }\n        else {\n            console.error(obj);\n            roTaskCompletionSource.reject(`Expected array in obj.data but got ${typeof (obj.data)}`);\n        }\n    }, (error) => {\n        roTaskCompletionSource.reject(error ?? \"unknown error\");\n    });\n    let result = await roTaskCompletionSource.promise;\n    return result;\n}\nexports.typedDBGet = typedDBGet;\n\n\n//# sourceURL=webpack://frontend-webpack/./src/get_typed.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DashboardEvents = void 0;\nconst angularjs_ts_1 = __importDefault(__webpack_require__(/*! angularjs-ts */ \"./node_modules/angularjs-ts/index.mjs\"));\nconst misc_util_1 = __webpack_require__(/*! ./misc_util */ \"./src/misc_util.ts\");\nconst DOMUtils = __importStar(__webpack_require__(/*! ./dom_utils */ \"./src/dom_utils.ts\"));\nconst transport_cards_1 = __webpack_require__(/*! ./transport_cards */ \"./src/transport_cards.ts\");\nvar DashboardEvents;\n(function (DashboardEvents) {\n    DashboardEvents[\"AddTransport\"] = \"AddTransport\";\n})(DashboardEvents || (exports.DashboardEvents = DashboardEvents = {}));\nfunction TransportCardsController($scope, $timeout) {\n    const lh = () => `[${new Date().toISOString().slice(0, -1).split('T')[1]}] [TransportCardsController]`;\n    const resizeTarget = DOMUtils.getElementByIdOrThrow(\"i011\");\n    let cv = {\n        paginationGotoValue: 1,\n        gotoPage: () => {\n            cv.pagination.pageNum = (cv.paginationGotoValue - 1);\n        },\n        paginationItemsPerPageValue: -1,\n        changeItemsPerPage: () => {\n            cv.pagination.pageItemCount = cv.paginationItemsPerPageValue;\n        },\n        pagination: new transport_cards_1.TransportCardPagination(0, 40, \"https://localhost/transports_get\"),\n        allCollapsed: false,\n        paginationVisible: true,\n        filtersVisible: false,\n        paginationSmallThreshold: 588,\n        paginationSmall: false,\n        paginationSmallInit: () => {\n            let wInit = DOMUtils.GetDomRectComputed(resizeTarget).computedWidth;\n            cv.paginationSmall = wInit <= cv.paginationSmallThreshold;\n        },\n        collapseAll: (targetState) => {\n            if (typeof (targetState) != \"boolean\")\n                throw new Error(`Expected boolean value for targetState`);\n            cv.pagination.tca.forEach(c => {\n                targetState == true ? c.collapse() : c.uncollapse();\n            });\n            console.log(`${lh()} Collapsed all to target state: ${targetState}`);\n            cv.allCollapsed = targetState;\n        },\n        addButtonClicked: () => {\n            document.dispatchEvent(new Event(DashboardEvents.AddTransport));\n            console.log(\"Add button clicked event\");\n        }\n    };\n    cv.paginationItemsPerPageValue = cv.pagination.pageItemCount;\n    cv.paginationSmallInit();\n    $scope.cards = cv;\n    document.addEventListener(transport_cards_1.TransportCardPaginationEvents.Updated, async () => {\n        console.log(\"TransportCardPaginationEvents.Updated\");\n        cv.pagination.tca.forEach(c => {\n            if (c.collapsed != cv.allCollapsed) {\n                cv.allCollapsed ? c.collapse() : c.uncollapse();\n            }\n        });\n        $scope.$apply();\n    });\n    cv.pagination.update();\n    // RESIZE, cv.paginationSmall value\n    $scope.resize = {};\n    $scope.resize.drag = async () => {\n        let m0 = false;\n        let deltaX = 0;\n        let initialSizeX = DOMUtils.GetDomRectComputed(resizeTarget).computedWidth;\n        let mouseMoveListener = (ev) => {\n            ev.stopPropagation();\n            if (!m0) {\n                deltaX = ev.clientX;\n                m0 = true;\n            }\n            else {\n                let moveX = ev.clientX - deltaX;\n                let newW = initialSizeX + moveX;\n                resizeTarget.style.width = `${newW}px`;\n                let ps = newW <= cv.paginationSmallThreshold;\n                if (ps != cv.paginationSmall) {\n                    cv.paginationSmall = ps;\n                    $scope.$apply();\n                }\n            }\n        };\n        document.addEventListener(\"mousemove\", mouseMoveListener);\n        let taskCompletionSource = new misc_util_1.TaskCompletionSource();\n        let mouseUpListener = (_) => { taskCompletionSource.resolve(); };\n        document.addEventListener(\"mouseup\", mouseUpListener);\n        await taskCompletionSource.promise;\n        document.removeEventListener(\"mouseup\", mouseUpListener);\n        document.removeEventListener(\"mousemove\", mouseMoveListener);\n        console.log(`DragStop`);\n    };\n    $scope.$on(\"$destroy\", () => {\n    });\n}\nasync function ControllerMain(app) {\n    // Register animation flash function\n    document.animationFlash = DOMUtils.animationFlash;\n    app.controller(\"TransportCardsController\", [\"$scope\", \"$timeout\", TransportCardsController]);\n    console.log(\"Loaded TransportCardsController\");\n    // For debugging\n    document.addEventListener(\"AddTransport\", (ev) => {\n        console.log(`EVENT ${DashboardEvents.AddTransport} Event ${ev.type} fired`);\n    });\n}\n(async () => {\n    let app = angularjs_ts_1.default.module(\"MainApp\", []);\n    ControllerMain(app); /* STRIP FROM EXPORT */\n})();\n\n\n//# sourceURL=webpack://frontend-webpack/./src/index.ts?");

/***/ }),

/***/ "./src/misc_util.ts":
/*!**************************!*\
  !*** ./src/misc_util.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.timestampToStringRO = exports.TaskCompletionSource = void 0;\nclass TaskCompletionSource {\n    static tcsError;\n    static {\n        TaskCompletionSource.tcsError = () => { throw new Error(\"TaskCompletionSource error\"); };\n    }\n    _promise;\n    _resolve;\n    _resolveSet;\n    _reject;\n    _rejectSet;\n    constructor() {\n        this._resolve = TaskCompletionSource.tcsError;\n        this._resolveSet = false;\n        this._reject = TaskCompletionSource.tcsError;\n        this._rejectSet = false;\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    get promise() { return this._promise; }\n    resolve(value) {\n        this._resolve(value);\n        this._resolveSet = true;\n    }\n    get resolveSet() { return this._resolveSet; }\n    reject(reason) {\n        this._reject(reason);\n        this._rejectSet = true;\n    }\n    get rejectSet() { return this._rejectSet; }\n}\nexports.TaskCompletionSource = TaskCompletionSource;\nfunction timestampToStringRO(timestamp) {\n    const date = new Date(timestamp);\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\n    const year = date.getFullYear();\n    return `${hours}:${minutes} ${day}.${month}.${year}`;\n}\nexports.timestampToStringRO = timestampToStringRO;\n\n\n//# sourceURL=webpack://frontend-webpack/./src/misc_util.ts?");

/***/ }),

/***/ "./src/transport_cards.ts":
/*!********************************!*\
  !*** ./src/transport_cards.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TransportCardPagination = exports.TransportCard = exports.transportStatusMap = exports.TransportCardPaginationEvents = exports.TransportCardEvents = exports.dbTransportCardValuesInstance = void 0;\nconst BE = __importStar(__webpack_require__(/*! ./get_typed */ \"./src/get_typed.ts\"));\nconst misc_util_1 = __webpack_require__(/*! ./misc_util */ \"./src/misc_util.ts\");\nexports.dbTransportCardValuesInstance = {\n    TransportId: [\"t1.id\", 0],\n    SupplierId1: [\"t1.supplierid1\", 0],\n    SupplierId2: [\"t1.supplierid2\", 0],\n    VehicleId: [\"t1.vehicleid\", 0],\n    //VehicleId             : [ \"v1.id\"                ,  \"str\" ],\n    WoodTypeId: [\"t1.woodtypeid\", 0],\n    ContainerId1: [\"t1.containerid1\", 0],\n    Container1Name: [\"c1.name\", \"str\"],\n    ContainerId2: [\"t1.containerid2\", 0],\n    Container2Name: [\"c2.name\", \"str\"],\n    TransportStatus: [\"t1.status\", 0],\n    VehicleStatusName: [\"t1.statusname\", \"str\"],\n    TransportStartMs: [\"t1.startstamp\", 0, \"str\"],\n    TransportEndMs: [\"t1.endstamp\", 0, \"str\"],\n    TransportPlannedStartMs: [\"t1.plannedstartstamp\", 0, \"str\"],\n    TransportPlannedEndMs: [\"t1.plannedendstamp\", 0, \"str\"],\n    Supplier1Name: [\"s1.name\", \"str\"],\n    Supplier2Name: [\"s2.name\", \"str\"],\n    VehicleName: [\"v1.name\", \"str\"],\n    WoodType: [\"w1.name\", \"str\"],\n    VehicleLat: [\"v1.lat\", 0],\n    VehicleLng: [\"v1.long\", 0],\n    VehicleMoving: [\"v1.ismoving\", true, 1],\n};\nvar TransportCardEvents;\n(function (TransportCardEvents) {\n    TransportCardEvents[\"ButtonClick\"] = \"transportCardButtonClick\";\n    TransportCardEvents[\"HoverStart\"] = \"transportCardHoverStart\";\n    TransportCardEvents[\"HoverEnd\"] = \"transportCardHoverEnd\";\n    TransportCardEvents[\"Collapsed\"] = \"transportCardCollapsed\";\n    TransportCardEvents[\"Uncollapsed\"] = \"transportCardUncollapsed\";\n})(TransportCardEvents || (exports.TransportCardEvents = TransportCardEvents = {}));\nvar TransportCardPaginationEvents;\n(function (TransportCardPaginationEvents) {\n    TransportCardPaginationEvents[\"Updated\"] = \"transportPaginationUpdated\";\n})(TransportCardPaginationEvents || (exports.TransportCardPaginationEvents = TransportCardPaginationEvents = {}));\nexports.transportStatusMap = Object.freeze({\n    m0: new Map([\n        [1, \"PLANIFICAT\"],\n        [2, \"IN PROGRES\"],\n        [3, \"FINALIZAT\"],\n        [4, \"ANULAT\"]\n    ]),\n    m1: new Map([\n        [\"PLANIFICAT\", 1],\n        [\"IN PROGRES\", 2],\n        [\"FINALIZAT\", 3],\n        [\"ANULAT\", 4]\n    ])\n});\nclass TransportCard {\n    //#region DB\n    dbValues;\n    originalDbValues;\n    cached;\n    constructor(dbValues, originalDbValues) {\n        this.dbValues = dbValues;\n        this.originalDbValues = originalDbValues;\n        this.cached = new Map();\n    }\n    static FromDBValues(obj) {\n        if (typeof (obj) != \"object\")\n            throw new Error(\"Expected object\");\n        let dbValues = {}; // : DBTransportCardValues\n        for (const [key, keyDefinitions] of Object.entries(exports.dbTransportCardValuesInstance)) {\n            let v = obj[keyDefinitions[0]];\n            if (typeof v == typeof keyDefinitions[1]) {\n                dbValues[key] = v;\n                continue;\n            }\n            else if (keyDefinitions.length == 3 && typeof v == typeof keyDefinitions[2]) {\n                if (typeof keyDefinitions[1] == \"number\" && typeof keyDefinitions[2] == \"string\") {\n                    // Parse string -> number \n                    let isFloat = v.indexOf('.') != -1;\n                    let vn = isFloat ? parseFloat(v) : parseInt(v);\n                    if (!isNaN(vn)) {\n                        dbValues[key] = vn;\n                        continue;\n                    }\n                }\n                else if (typeof keyDefinitions[1] == \"boolean\" && typeof keyDefinitions[2] == \"number\") {\n                    dbValues[key] = v != 0;\n                    continue;\n                }\n            }\n            console.warn(`[${key}]: ${keyDefinitions[0]} expected ${typeof (keyDefinitions[1])} but got ${typeof v}; value of v: ${v}; using default value ${keyDefinitions[1]}`);\n            dbValues[key] = keyDefinitions[1]; // default value\n        }\n        return new TransportCard(dbValues, obj);\n    }\n    //#endregion\n    //#region VALUES\n    get transportIdName() {\n        if (!this.cached.has(\"transportIdName\"))\n            this.cached.set(\"transportIdName\", `${this.dbValues.TransportId.toString()}`);\n        let v = this.cached.get(\"transportIdName\");\n        //console.log(`Returning: ${v}`);\n        return v;\n    }\n    get container1Name() {\n        if (!this.cached.has(\"container1Name\"))\n            this.cached.set(\"container1Name\", `${this.dbValues.Container1Name}`);\n        let v = this.cached.get(\"container1Name\");\n        //console.log(`Returning: ${v}`); \n        return v;\n    }\n    get container2Name() {\n        if (!this.cached.has(\"container2Name\"))\n            this.cached.set(\"container2Name\", `${this.dbValues.Container2Name}`);\n        let v = this.cached.get(\"container2Name\");\n        //console.log(`Returning: ${v}`); \n        return v;\n    }\n    get transportStatusName() {\n        if (!this.cached.has(\"transportStatusName\")) {\n            if (exports.transportStatusMap.m0.has(this.dbValues.TransportStatus)) {\n                this.cached.set(\"transportStatusName\", `${exports.transportStatusMap.m0.get(this.dbValues.TransportStatus)}`);\n            }\n            else {\n                this.cached.set(\"transportStatusName\", `necunoscut: ${this.dbValues.TransportStatus}`);\n            }\n        }\n        return this.cached.get(\"transportStatusName\");\n    }\n    transportStatusIntSwitch(o, defaultValue) {\n        let statusId = this.dbValues.TransportStatus;\n        let v = o[statusId];\n        return v === undefined ? defaultValue : v;\n    }\n    get startTimeString() {\n        if (!this.cached.has(\"startTimeString\")) {\n            let t = this.dbValues.TransportStartMs;\n            this.cached.set(\"startTimeString\", (t < 1 ? `necunoscut` : `${(0, misc_util_1.timestampToStringRO)(t)}`));\n        }\n        return this.cached.get(\"startTimeString\");\n    }\n    get endTimeString() {\n        if (!this.cached.has(\"endTimeString\")) {\n            let t = this.dbValues.TransportEndMs;\n            this.cached.set(\"endTimeString\", (t < 1 ? `necunoscut` : `${(0, misc_util_1.timestampToStringRO)(t)}`));\n        }\n        return this.cached.get(\"endTimeString\");\n    }\n    get plannedStartTimeString() {\n        if (!this.cached.has(\"plannedStartTimeString\")) {\n            let t = this.dbValues.TransportPlannedStartMs;\n            this.cached.set(\"plannedStartTimeString\", (t < 1 ? `necunoscut` : `${(0, misc_util_1.timestampToStringRO)(t)}`));\n        }\n        return this.cached.get(\"plannedStartTimeString\");\n    }\n    get plannedEndTimeString() {\n        if (!this.cached.has(\"plannedEndTimeString\")) {\n            let t = this.dbValues.TransportEndMs;\n            this.cached.set(\"plannedEndTimeString\", (t < 1 ? `necunoscut` : `${(0, misc_util_1.timestampToStringRO)(t)}`));\n        }\n        return this.cached.get(\"plannedEndTimeString\");\n    }\n    get supplierNames() {\n        if (!this.cached.has(\"supplierNames\")) {\n            let sarr = [this.dbValues.Supplier1Name, this.dbValues.Supplier2Name].filter(v => v != \"Fara\");\n            if (sarr.length == 0)\n                this.cached.set(\"supplierNames\", \"Fara furnizori\");\n            else\n                this.cached.set(\"supplierNames\", `${sarr.join(', ')}`);\n        }\n        return this.cached.get(\"supplierNames\");\n    }\n    get materialName() {\n        if (!this.cached.has(\"materialName\"))\n            this.cached.set(\"materialName\", `${this.dbValues.WoodType}`);\n        return this.cached.get(\"materialName\");\n    }\n    get vehicleName() {\n        if (!this.cached.has(\"vehicleName\")) {\n            this.cached.set(\"vehicleName\", `${this.dbValues.VehicleName}`);\n        }\n        return this.cached.get(\"vehicleName\");\n    }\n    get vehicleMoving() {\n        return this.dbValues.VehicleMoving;\n    }\n    //#endregion\n    //#region UI_ONLY\n    buttonClick(buttonName) {\n        let ev = new CustomEvent(TransportCardEvents.ButtonClick, {\n            detail: { sender: this, buttonName: buttonName }, bubbles: false\n        });\n        document.dispatchEvent(ev);\n        console.log(\"Transport card: dispatched event\");\n        console.log(ev);\n    }\n    _hovering = false;\n    get hovering() { return this._hovering; }\n    hoverStart() {\n        this._hovering = true;\n        let ev = new CustomEvent(TransportCardEvents.HoverStart, {\n            detail: { sender: this }, bubbles: false\n        });\n        document.dispatchEvent(ev);\n        //console.log(\"Transport card: dispatched event\"); console.log(ev);\n    }\n    hoverEnd() {\n        this._hovering = false;\n        let ev = new CustomEvent(TransportCardEvents.HoverEnd, {\n            detail: { sender: this }, bubbles: false\n        });\n        document.dispatchEvent(ev);\n        //console.log(\"Transport card: dispatched event\"); console.log(ev);\n    }\n    _collapsed = false;\n    get collapsed() {\n        return this._collapsed;\n    }\n    collapse() {\n        this._collapsed = true;\n        let ev = new CustomEvent(TransportCardEvents.Collapsed, {\n            detail: { sender: this }, bubbles: false\n        });\n        document.dispatchEvent(ev);\n        //console.log(\"Transport card: dispatched event\"); console.log(ev);\n    }\n    uncollapse() {\n        this._collapsed = false;\n        let ev = new CustomEvent(TransportCardEvents.Uncollapsed, {\n            detail: { sender: this }, bubbles: false\n        });\n        document.dispatchEvent(ev);\n        //console.log(\"Transport card: dispatched event\"); console.log(ev);\n    }\n    toggleCollapse() {\n        if (this._collapsed)\n            this.uncollapse();\n        else\n            this.collapse();\n    }\n}\nexports.TransportCard = TransportCard;\nclass TransportCardPagination {\n    lh = () => `[${new Date().toISOString().slice(0, -1).split('T')[1]}] [TransportCardPagination]`;\n    _tca = [];\n    get tca() {\n        return this._tca;\n    }\n    _pageNum;\n    get pageNum() {\n        return this._pageNum;\n    }\n    set pageNum(value) {\n        if (value < 0)\n            return;\n        this._pageNum = value;\n        this.update();\n    }\n    pageNumIncrement() {\n        this.pageNum = this.pageNum + 1;\n    }\n    pageNumDecrement() {\n        this.pageNum = this.pageNum - 1;\n    }\n    _pageItemCount;\n    get pageItemCount() { return this._pageItemCount; }\n    set pageItemCount(value) {\n        this._pageItemCount = value;\n        this.update();\n    }\n    //#region FILTERS \n    _filter_TransportStartMs_min = null;\n    get filter_TransportStartMs_min() { return this._filter_TransportStartMs_min; }\n    set filter_TransportStartMs_min(value) {\n        this._filter_TransportStartMs_min = value;\n        this.update();\n    }\n    _filter_TransportStartMs_max = null;\n    get filter_TransportStartMs_max() { return this._filter_TransportStartMs_max; }\n    set filter_TransportStartMs_max(value) {\n        this._filter_TransportStartMs_max = value;\n        this.update();\n    }\n    _filter_TransportEndMs_min = null;\n    get filter_TransportEndMs_min() { return this._filter_TransportEndMs_min; }\n    set filter_TransportEndMs_min(value) {\n        this._filter_TransportEndMs_min = value;\n        this.update();\n    }\n    _filter_TransportEndMs_max = null;\n    get filter_TransportEndMs_max() { return this._filter_TransportEndMs_max; }\n    set filter_TransportEndMs_max(value) {\n        this._filter_TransportEndMs_max = value;\n        this.update();\n    }\n    _filter_TransportPlannedStartMs_min = null;\n    get filter_TransportPlannedStartMs_min() { return this._filter_TransportPlannedStartMs_min; }\n    set filter_TransportPlannedStartMs_min(value) {\n        this._filter_TransportPlannedStartMs_min = value;\n        this.update();\n    }\n    _filter_TransportPlannedStartMs_max = null;\n    get filter_TransportPlannedStartMs_max() { return this._filter_TransportPlannedStartMs_max; }\n    set filter_TransportPlannedStartMs_max(value) {\n        this._filter_TransportPlannedStartMs_max = value;\n        this.update();\n    }\n    _filter_TransportPlannedEndMs_min = null;\n    get filter_TransportPlannedEndMs_min() { return this._filter_TransportPlannedEndMs_min; }\n    set filter_TransportPlannedEndMs_min(value) {\n        this._filter_TransportPlannedEndMs_min = value;\n        this.update();\n    }\n    _filter_TransportPlannedEndMs_max = null;\n    get filter_TransportPlannedEndMs_max() { return this._filter_TransportPlannedEndMs_max; }\n    set filter_TransportPlannedEndMs_max(value) {\n        this._filter_TransportPlannedEndMs_max = value;\n        this.update();\n    }\n    _filter_TransportId = null;\n    get filter_TransportId() { return this._filter_TransportId; }\n    set filter_TransportId(value) {\n        this._filter_TransportId = value;\n        this.update();\n    }\n    _filter_Container1Name = null;\n    get filter_Container1Name() { return this._filter_Container1Name; }\n    set filter_Container1Name(value) {\n        this._filter_Container1Name = value;\n        this.update();\n    }\n    _filter_Container2Name = null;\n    get filter_Container2Name() { return this._filter_Container2Name; }\n    set filter_Container2Name(value) {\n        this._filter_Container2Name = value;\n        this.update();\n    }\n    _filter_VehicleName = null;\n    get filter_VehicleName() { return this._filter_VehicleName; }\n    set filter_VehicleName(value) {\n        this._filter_VehicleName = value;\n        this.update();\n    }\n    _filter_Supplier1Name = null;\n    get filter_Supplier1Name() { return this._filter_Supplier1Name; }\n    set filter_Supplier1Name(value) {\n        this._filter_Supplier1Name = value;\n        this.update();\n    }\n    _filter_Supplier2Name = null;\n    get filter_Supplier2Name() { return this._filter_Supplier2Name; }\n    set filter_Supplier2Name(value) {\n        this._filter_Supplier2Name = value;\n        this.update();\n    }\n    _filter_WoodType = null;\n    get filter_WoodType() { return this._filter_WoodType; }\n    set filter_WoodType(value) {\n        this._filter_WoodType = value;\n        this.update();\n    }\n    _filter_Status = null; // DROPDOWN\n    get filter_Status() { return this._filter_Status?.toString() ?? null; }\n    set filter_Status(valueStr) {\n        let value = valueStr == null ? null : parseInt(valueStr);\n        if (value == null || exports.transportStatusMap.m0.has(value)) {\n            this._filter_Status = value;\n            this.update();\n        }\n        else {\n            throw new Error(`${this.lh()} Not setting filter status to value ${value} (type ${typeof value}) because it is not in transportStatusMap.m0`);\n        }\n    }\n    getFilterStringObject() {\n        let o = {};\n        let dtcv = exports.dbTransportCardValuesInstance;\n        if (this.filter_TransportStartMs_min != null || this.filter_TransportStartMs_max != null) {\n            o[dtcv.TransportStartMs[0]] = {};\n            if (this.filter_TransportStartMs_min != null)\n                o[dtcv.TransportStartMs[0]][\"min\"] = this.filter_TransportStartMs_min.getTime();\n            if (this.filter_TransportStartMs_max != null)\n                o[dtcv.TransportStartMs[0]][\"max\"] = this.filter_TransportStartMs_max.getTime();\n        }\n        if (this.filter_TransportEndMs_min != null || this.filter_TransportEndMs_max != null) {\n            o[dtcv.TransportEndMs[0]] = {};\n            if (this.filter_TransportEndMs_min != null)\n                o[dtcv.TransportEndMs[0]][\"min\"] = this.filter_TransportEndMs_min.getTime();\n            if (this.filter_TransportEndMs_max != null)\n                o[dtcv.TransportEndMs[0]][\"max\"] = this.filter_TransportEndMs_max.getTime();\n        }\n        if (this.filter_TransportPlannedStartMs_min != null || this.filter_TransportPlannedStartMs_max != null) {\n            o[dtcv.TransportPlannedStartMs[0]] = {};\n            if (this.filter_TransportPlannedStartMs_min != null)\n                o[dtcv.TransportPlannedStartMs[0]][\"min\"] = this.filter_TransportPlannedStartMs_min.getTime();\n            if (this.filter_TransportPlannedStartMs_max != null)\n                o[dtcv.TransportPlannedStartMs[0]][\"max\"] = this.filter_TransportPlannedStartMs_max.getTime();\n        }\n        if (this.filter_TransportPlannedEndMs_min != null || this.filter_TransportPlannedEndMs_max != null) {\n            o[dtcv.TransportPlannedEndMs[0]] = {};\n            if (this.filter_TransportPlannedEndMs_min != null)\n                o[dtcv.TransportPlannedEndMs[0]][\"min\"] = this.filter_TransportPlannedEndMs_min.getTime();\n            if (this.filter_TransportPlannedEndMs_max != null)\n                o[dtcv.TransportPlannedEndMs[0]][\"max\"] = this.filter_TransportPlannedEndMs_max.getTime();\n        }\n        if (this.filter_TransportId != null) {\n            o[dtcv.TransportId[0]] = this.filter_TransportId;\n        }\n        if (this.filter_Container1Name != null) {\n            o[dtcv.Container1Name[0]] = this.filter_Container1Name;\n        }\n        if (this.filter_Container2Name != null) {\n            o[dtcv.Container2Name[0]] = this.filter_Container2Name;\n        }\n        if (this.filter_VehicleName != null) {\n            o[dtcv.VehicleName[0]] = this.filter_VehicleName;\n        }\n        if (this.filter_Supplier1Name != null) {\n            o[dtcv.Supplier1Name[0]] = this.filter_Supplier1Name;\n        }\n        if (this.filter_Supplier2Name != null) {\n            o[dtcv.Supplier2Name[0]] = this.filter_Supplier2Name;\n        }\n        if (this.filter_WoodType != null) {\n            o[dtcv.WoodType[0]] = this.filter_WoodType;\n        }\n        if (this.filter_Status != null) {\n            o[dtcv.TransportStatus[0]] = this.filter_Status;\n        }\n        return o;\n    }\n    //#endregion\n    //#region SORT\n    _orderBy = \"TransportId\";\n    get orderBy() {\n        return this._orderBy;\n    }\n    set orderBy(value) {\n        console.log(`${this.lh()}: DEBUG orderBy SET: ${value}`);\n        if (value == null) {\n            this._orderBy = null;\n        }\n        else {\n            if (exports.dbTransportCardValuesInstance[value] == null)\n                throw new Error(`Invalid orderBy value: ${value}`);\n            else\n                this._orderBy = value;\n        }\n        this.update();\n    }\n    _orderDirection = \"ASC\";\n    get orderDirection() {\n        return this._orderDirection;\n    }\n    set orderDirection(value) {\n        console.log(`${this.lh()}: DEBUG orderDirection SET: ${value}`);\n        if (value != \"ASC\" && value != \"DESC\")\n            throw new Error(`Invalid orderDirection value: ${value}`);\n        this._orderDirection = value;\n        this.update();\n    }\n    //#endregion\n    _urlBase;\n    constructor(currentPageNum, pageItemCount, urlBase) {\n        this._pageNum = currentPageNum;\n        this._pageItemCount = pageItemCount;\n        this._urlBase = urlBase;\n    }\n    async update() {\n        let fso = this.getFilterStringObject();\n        let u = `${this._urlBase}`;\n        u += `?start=${(this._pageNum * this._pageItemCount)}&count=${this._pageItemCount}`;\n        u += `&filter=${JSON.stringify(fso)}`;\n        if (this._orderBy != null) {\n            u += `&orderby=${exports.dbTransportCardValuesInstance[this._orderBy][0]} ${this._orderDirection}`;\n        }\n        console.log(`${this.lh()} url: ${u}`);\n        let cards = await BE.typedDBGet(u, (raw) => TransportCard.FromDBValues(raw));\n        this._tca = cards;\n        console.log(`${this.lh()} Fetched Cards; num: ${cards.length}`);\n        document.dispatchEvent(new Event(TransportCardPaginationEvents.Updated));\n    }\n}\nexports.TransportCardPagination = TransportCardPagination;\n\n\n//# sourceURL=webpack://frontend-webpack/./src/transport_cards.ts?");

/***/ }),

/***/ "./node_modules/angularjs-ts/index.mjs":
/*!*********************************************!*\
  !*** ./node_modules/angularjs-ts/index.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nlet angular = window.angular;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (angular);\n\n\n//# sourceURL=webpack://frontend-webpack/./node_modules/angularjs-ts/index.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;